{
  "openapi": "3.1.0",
  "info": {
    "title": "Optexity API",
    "description": "API for Optexity workflow automation and inference tasks",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://prod-api.optexity.com"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "SaveDemoRequest": {
        "type": "object",
        "required": ["url", "files"],
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL associated with the goal"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of file URLs or file data to be attached to the goal"
          }
        }
      },
      "SaveDemoResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "goal_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InferenceRequest": {
        "type": "object",
        "required": ["end_point", "goal"],
        "properties": {
          "end_point": {
            "type": "string",
            "description": "The endpoint or service to call for inference"
          },
          "goal": {
            "type": "string",
            "description": "The goal or objective for this inference task"
          },
          "params": {
            "type": "object",
            "description": "Additional parameters for the inference task"
          }
        }
      },
      "InferenceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["started", "running", "completed", "failed"]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "TaskStatusRequest": {
        "type": "object",
        "required": ["task_id"],
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The unique identifier of the task to check"
          }
        }
      },
      "TaskStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["running", "completed", "failed"]
          },
          "end_point": {
            "type": "string"
          },
          "goal": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "error": {
            "type": "string"
          }
        }
      },
      "AllCallsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "total_requests": {
            "type": "integer"
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStatusResponse"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/save_demo": {
      "post": {
        "summary": "Create a new goal with file attachments",
        "description": "This endpoint allows you to create a new goal with optional file attachments. The files will be stored in Supabase Storage and their URLs will be saved with the goal.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDemoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Goal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDemoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inference/": {
      "post": {
        "summary": "Start a new inference task",
        "description": "This endpoint allows you to start a new inference task with specified parameters and goals.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inference task started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InferenceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inference/all_calls": {
      "post": {
        "summary": "Get all inference requests",
        "description": "This endpoint retrieves all inference requests that have been made so far. It provides a comprehensive list of all tasks and their current statuses.",
        "responses": {
          "200": {
            "description": "All inference requests retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllCallsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inference/call": {
      "post": {
        "summary": "Get status of a specific request",
        "description": "This endpoint allows you to check the status of a specific inference request using its task ID. You can use this to monitor the progress of running tasks or retrieve results of completed tasks.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing task_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}